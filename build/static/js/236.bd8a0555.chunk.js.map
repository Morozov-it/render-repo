{"version":3,"file":"static/js/236.bd8a0555.chunk.js","mappings":"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","sources":["components/controllers/RubInput.tsx","components/controllers/CatalogSelect.tsx","utils/recursionObjectSearch.ts","components/smartTable/lib/getTableCustomFilter.tsx","components/smartTable/index.tsx","components/smartTable/ui/DropdownDatepicker.tsx","components/smartTable/ui/DropdownSlider.tsx","components/smartTable/ui/DropdownSearch.tsx","components/smartTable/ui/EditableCell.tsx","components/smartTable/ui/EditButtons.tsx","models/user.ts","components/templates/PageToolbar.tsx","components/templates/PageWrapper.tsx","pages/contracts/deals/models/index.ts","pages/contracts/deals/api/deals.api.ts","pages/contracts/customers/api/customers.api.ts","models/base.ts","pages/contracts/deals/ui/TabsBar.tsx","pages/contracts/deals/lib/getHistoryColumns.tsx","pages/contracts/deals/ui/HistoryView.tsx","pages/contracts/deals/lib/getDealsColumns.tsx","pages/contracts/deals/lib/getUpdatedFields.tsx","pages/contracts/deals/lib/getCreatedFields.tsx","pages/contracts/deals/lib/useDealActions.ts","utils/getChangedFields.ts","components/modals/AttachmentsModal.tsx","components/templates/CreateForm.tsx","components/templates/ViewEditForm.tsx","components/templates/ViewTabs.tsx","components/templates/ResizeTemplate.tsx","pages/contracts/deals/index.tsx","utils/hooks/useUserFilter.ts","utils/hooks/useTabs.ts","utils/hooks/useDrawer.ts","utils/hooks/useModal.ts","utils/hooks/useTable.ts","utils/hooks/useUser.ts","utils/parseBigValue.ts"],"sourcesContent":["import React from 'react'\r\nimport { InputNumber, InputNumberProps } from 'antd'\r\n\r\nconst RubInput: React.FC<InputNumberProps> = (props) => {\r\n    return (\r\n        <InputNumber\r\n            {...props}\r\n            prefix=\"₽\"\r\n            style={{ width: '100%' }}\r\n            step={1000}\r\n            formatter={value => String(value).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\r\n            parser={value => Number(value!.replace(/\\s/g, ''))} />\r\n    )\r\n}\r\n\r\nexport default React.memo(RubInput)","\r\nimport React from 'react'\r\nimport { Select, SelectProps } from 'antd'\r\nimport { Catalog } from '@models/base'\r\n\r\nconst CatalogSelect: React.FC<SelectProps & { catalog?: Catalog[]}> = ({ catalog, ...props }) => {\r\n    return (\r\n        <Select\r\n            placeholder=\"выбрать\"\r\n            allowClear\r\n            showSearch\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n                (option!.children as unknown as string).toLowerCase().includes(input.toLowerCase())}\r\n            filterSort={(optionA, optionB) =>\r\n                (optionA!.children as unknown as string)\r\n                    .toLowerCase()\r\n                    .localeCompare((optionB!.children as unknown as string).toLowerCase())\r\n            }\r\n            {...props}\r\n        >\r\n            {catalog?.map((item) => (\r\n                <Select.Option key={item.id} value={item.id}>{item.name}</Select.Option>\r\n            ))}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default React.memo(CatalogSelect)","import { DataIndex } from 'rc-table/lib/interface'\r\n\r\nconst recursionObjectSearch = (obj: Record<string, any>, keys?: DataIndex): string => {\r\n    if (!keys) return ''\r\n\r\n    if (!Array.isArray(keys)) {\r\n        return obj[keys as string] ?? ''\r\n    }\r\n\r\n    const tempKeys = [...keys]\r\n    for (let i = 0; i < tempKeys.length; i++) {\r\n        const key = tempKeys[i]\r\n        if (obj[key]) {\r\n            const entity = obj[key]\r\n            if (tempKeys.length === 1) {\r\n                return entity\r\n            }\r\n            tempKeys.shift()\r\n            return recursionObjectSearch(entity, tempKeys)\r\n        }\r\n    }\r\n    return ''\r\n}\r\n\r\nexport default recursionObjectSearch\r\n","import React from 'react'\r\nimport { ColumnType } from 'antd/es/table'\r\nimport { CalendarOutlined, SearchOutlined, SlidersOutlined } from '@ant-design/icons'\r\nimport { DataIndex } from 'rc-table/lib/interface'\r\nimport { Moment } from 'moment'\r\nimport { FilterDropdownProps } from 'antd/lib/table/interface'\r\nimport { DropdownDatepicker, DropdownSlider, DropdownSearch } from '../ui'\r\nimport { CustomTableFilter, InitialSliderValues } from './types'\r\nimport recursionObjectSearch from '@utils/recursionObjectSearch'\r\n\r\nconst onSearchFilter =\r\n    (dataIndex?: DataIndex): ColumnType<any>['onFilter'] =>\r\n    (value, record) => {\r\n        const string = recursionObjectSearch(record, dataIndex ?? '').toLowerCase()\r\n\r\n        return !!value\r\n            ? string?.includes(value.toString().toLowerCase())\r\n            : true\r\n    }\r\n\r\nconst onDatePickerFilter =\r\n    (dataIndex?: DataIndex): ColumnType<any>['onFilter'] =>\r\n    (value, record) => {\r\n        const date = recursionObjectSearch(record, dataIndex ?? '')\r\n\r\n        return !!value\r\n            ? (value as unknown as Moment[])[0]?.isSameOrBefore(date) &&\r\n                    (value as unknown as Moment[])[1]?.isSameOrAfter(date)\r\n            : true\r\n    }\r\n\r\nconst onSliderFilter =\r\n    (dataIndex?: DataIndex): ColumnType<any>['onFilter'] =>\r\n    (value, record) => {\r\n        const number = recursionObjectSearch(record, dataIndex ?? '')\r\n\r\n        return !!value\r\n            ? (value as unknown as number[])[0] <= Number(number) && Number(number) <= (value as unknown as number[])[1]\r\n            : true\r\n    }\r\n\r\nconst getTableCustomFilter = (\r\n    dataIndex?: DataIndex,\r\n    customFilter?: CustomTableFilter,\r\n    initialSliderValues?: InitialSliderValues,\r\n): ColumnType<any> => {\r\n    switch (customFilter) {\r\n        case 'date-picker': \r\n            return {\r\n                filterDropdown: (props: FilterDropdownProps) => <DropdownDatepicker {...props} />,\r\n                filterIcon: <CalendarOutlined />,\r\n                onFilter: onDatePickerFilter(dataIndex),\r\n            }\r\n        case 'slider':\r\n            return {\r\n                filterDropdown: (props: FilterDropdownProps) => <DropdownSlider {...props} {...initialSliderValues} />,\r\n                filterIcon: <SlidersOutlined />,\r\n                onFilter: onSliderFilter(dataIndex),\r\n            }\r\n        case 'search':\r\n            return {\r\n                filterDropdown: (props: FilterDropdownProps) => <DropdownSearch {...props} />,\r\n                filterIcon: <SearchOutlined />,\r\n                onFilter: onSearchFilter(dataIndex),\r\n            }\r\n        default:\r\n            return {}\r\n    }\r\n}\r\n\r\nexport default getTableCustomFilter\r\n","import React, { useMemo } from 'react'\r\nimport { Table as AntdTable } from 'antd'\r\nimport { TableProps } from 'antd/lib/table/Table'\r\nimport styled from 'styled-components'\r\nimport getTableCustomFilter from './lib/getTableCustomFilter'\r\nimport { CustomColumnType } from './lib/types'\r\n\r\nconst StyledTable = styled(AntdTable)`\r\n    width: 100%;\r\n    height: 100%;\r\n    .row-selected,\r\n    .row-selected:hover {\r\n        transition: 0.1s;\r\n    }\r\n    .ant-table-thead > tr > th, \r\n    .ant-table-tbody > tr > td, \r\n    .ant-table tfoot > tr > th, \r\n    .ant-table tfoot > tr > td {\r\n        padding: 8px 12px;\r\n    }\r\n` as typeof Table\r\n\r\ntype Props<RecordType> = Omit<TableProps<RecordType>, 'columns' | 'dataSource'> & {\r\n    columns: CustomColumnType<RecordType>[]\r\n    dataSource: RecordType[]\r\n}\r\n\r\nconst Table = <RecordType,>({ columns, ...other }: Props<RecordType>) => {\r\n    const customColumns = useMemo(() => {\r\n        const p = columns?.map((col) => ({\r\n            ...col,\r\n            ...(col?.customFilter\r\n                ? getTableCustomFilter(col?.dataIndex, col?.customFilter, col?.initialSliderValues)\r\n                : null),\r\n        }))\r\n\r\n        return p\r\n    }, [columns])\r\n\r\n    return (\r\n        <StyledTable\r\n            {...other}\r\n            rowKey={'id'}\r\n            columns={customColumns}\r\n            bordered\r\n        />\r\n    )\r\n}\r\n\r\nexport default React.memo(Table) as typeof Table","/* eslint-disable no-useless-computed-key */\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { DatePicker } from 'antd'\r\nimport { FilterDropdownProps } from 'antd/lib/table/interface'\r\n\r\nconst DropdownDatePicker = (props: FilterDropdownProps) => {\r\n    const handleChange = (value: any) => {\r\n        props.setSelectedKeys([value])\r\n        props.confirm()\r\n        if (!value && props.clearFilters) {\r\n            props.clearFilters()\r\n            props.confirm()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DatePicker.RangePicker\r\n            format=\"DD.MM.YYYY\"\r\n            placeholder={['от', 'до']}\r\n            onChange={handleChange}\r\n            ranges={{\r\n                ['сегодня']: [moment(), moment()],\r\n                ['неделя']: [moment(), moment().add(1, 'week')],\r\n                ['месяц']: [moment(), moment().add(1, 'month')],\r\n                ['год']: [moment(), moment().add(1, 'year')],\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default React.memo(DropdownDatePicker)\r\n","import React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Slider, Space } from 'antd'\r\nimport { FilterDropdownProps } from 'antd/lib/table/interface'\r\nimport parseBigValue from '@utils/parseBigValue'\r\nimport { SliderMarks } from 'antd/lib/slider'\r\nimport { InitialSliderValues } from '../lib/types'\r\n\r\ntype CustomFilterDropdownProps = FilterDropdownProps & InitialSliderValues\r\n\r\nconst DropdownSlider = ({\r\n    setSelectedKeys,\r\n    confirm,\r\n    clearFilters,\r\n    min = 0,\r\n    max = 100,\r\n    step = 10,\r\n    symbol = '',\r\n}: CustomFilterDropdownProps) => {\r\n    const [value, setValue] = useState<[number, number]>([min, max])\r\n\r\n    const marks: SliderMarks = useMemo(\r\n        () => ({\r\n            0: {\r\n                style: { left: '0%', transform: 'translateX(0%)', whiteSpace: 'nowrap' },\r\n                label: parseBigValue(min, 3) + symbol,\r\n            },\r\n            100: {\r\n                style: { left: '100%', transform: 'translateX(-100%)', whiteSpace: 'nowrap' },\r\n                label: parseBigValue(max, 3) + symbol,\r\n            },\r\n        }),\r\n        [max, min, symbol],\r\n    )\r\n\r\n    const formatter = useCallback((value?: number) => parseBigValue(value ?? 0, 3) + symbol, [symbol])\r\n\r\n    const handleSearch = (value: any) => {\r\n        setSelectedKeys([value])\r\n        confirm()\r\n    }\r\n\r\n    const handleReset = () => {\r\n        clearFilters && clearFilters()\r\n        confirm()\r\n        setValue([min, max])\r\n    }\r\n\r\n    return (\r\n        <div style={{ padding: 8 }}>\r\n            <Slider\r\n                min={min}\r\n                max={max}\r\n                step={step}\r\n                range={{ draggableTrack: true }}\r\n                tooltip={{ formatter }}\r\n                marks={marks}\r\n                value={value}\r\n                onChange={(value: [number, number]) => setValue([...value])}\r\n                style={{ marginBottom: 30, display: 'block' }}\r\n            />\r\n            <Space>\r\n                <Button type=\"primary\" onClick={() => handleSearch(value)} size=\"small\" style={{ width: 200 }}>\r\n                    OK\r\n                </Button>\r\n                <Button onClick={handleReset} size=\"small\" style={{ width: 200 }}>\r\n                    Сбросить\r\n                </Button>\r\n            </Space>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(DropdownSlider)\r\n","import React from 'react'\r\nimport { Button, Input, Space } from 'antd'\r\nimport { FilterDropdownProps } from 'antd/lib/table/interface'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\n\r\nconst DropdownSearch = ({ setSelectedKeys, selectedKeys, confirm, clearFilters }: FilterDropdownProps) => {\r\n    const handleSearch = (selectedKeys: React.Key[], confirm: () => void) => {\r\n        confirm()\r\n    }\r\n\r\n    const handleReset = (clearFilters: () => void, confirm: () => void) => {\r\n        clearFilters()\r\n        handleSearch([], confirm)\r\n    }\r\n\r\n    return (\r\n        <div style={{ padding: 8 }}>\r\n            <Input\r\n                placeholder={'Поиск'}\r\n                value={selectedKeys[0]}\r\n                onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                onPressEnter={() => handleSearch(selectedKeys, confirm)}\r\n                style={{ marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Space>\r\n                <Button\r\n                    type=\"primary\"\r\n                    onClick={() => handleSearch(selectedKeys, confirm)}\r\n                    icon={<SearchOutlined />}\r\n                    size=\"small\"\r\n                    style={{ width: 90 }}\r\n                >\r\n                    Поиск\r\n                </Button>\r\n                <Button\r\n                    onClick={() => clearFilters && handleReset(clearFilters, confirm)}\r\n                    size=\"small\"\r\n                    style={{ width: 90 }}\r\n                >\r\n                    Сбросить\r\n                </Button>\r\n            </Space>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(DropdownSearch)","import React from 'react'\r\nimport { Form, Input, InputNumber } from 'antd'\r\nimport { CatalogSelect } from '@components/controllers'\r\nimport { Catalog } from '@models/base'\r\nimport { EditType } from '../lib/types'\r\n\r\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\r\n    editing: boolean\r\n    dataIndex: string\r\n    title: any\r\n    inputType: EditType\r\n    record: any\r\n    index: number\r\n    children: React.ReactNode\r\n    catalog?: Catalog[]\r\n}\r\n\r\nconst EditableCell: React.FC<EditableCellProps> = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    catalog,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = () => {\r\n        switch (inputType) {\r\n            case 'number':\r\n                return <InputNumber />\r\n            case 'select':\r\n                return <CatalogSelect catalog={catalog} />\r\n            case 'text':\r\n                return <Input />\r\n            default:\r\n                return <Input />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n            <Form.Item\r\n                name={dataIndex}\r\n                style={{ margin: 0 }}\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: 'Введите данные',\r\n                },\r\n                ]}\r\n            >\r\n                {inputNode()}\r\n            </Form.Item>\r\n            ) : (\r\n            children\r\n            )}\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default React.memo(EditableCell)","import React from 'react'\r\nimport { CloseOutlined, EditOutlined, SaveOutlined } from \"@ant-design/icons\"\r\nimport { Button, Popconfirm, Space, Tooltip } from \"antd\"\r\n\r\ninterface Props<T> {\r\n    editable: boolean\r\n    editingKey: React.Key\r\n    save: (record: T) => Promise<void>\r\n    cancelEdit: () => void\r\n    edit: (record: T) => void\r\n    loading: boolean\r\n    record: T\r\n}\r\n\r\nconst EditButtons = <T,>({ editable, edit, cancelEdit, editingKey, loading, save, record }: Props<T>) => {\r\n    return editable ? (\r\n        <Space>\r\n            <Popconfirm\r\n                title=\"Вы точно хотите сохранить изменения?\"\r\n                onConfirm={() => save(record)}\r\n            >\r\n                <Tooltip title='Сохранить'>\r\n                    <Button loading={loading} icon={<SaveOutlined />} />\r\n                </Tooltip>\r\n            </Popconfirm>\r\n            <Tooltip title='Отменить'>\r\n                <Button onClick={cancelEdit} icon={<CloseOutlined />} />\r\n            </Tooltip>\r\n        </Space>\r\n    ) : (\r\n        <Tooltip title='Изменить'>\r\n            <Button\r\n                disabled={editingKey !== ''}\r\n                onClick={() => edit(record)}\r\n                icon={<EditOutlined />}\r\n            />\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default React.memo(EditButtons) as typeof EditButtons","export interface User {\r\n    name: string\r\n    email: string\r\n    id: number\r\n}\r\n\r\nexport interface UserDTO {\r\n    email: string\r\n    password: string\r\n    name?: string\r\n}\r\n\r\nexport interface ResponseUserApi {\r\n    accessToken: string\r\n    user: User\r\n}\r\n\r\nexport type UserFilter = 'all' | 'user'\r\n\r\nexport enum UserFilterSelect {\r\n    all = 'Все',\r\n    user = 'Созданные мной'\r\n}","import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Popconfirm, Space } from 'antd'\r\nimport { DeleteOutlined, FileAddOutlined } from '@ant-design/icons'\r\nimport { CatalogSelect } from '@components/controllers'\r\nimport { UserFilter, UserFilterSelect } from '@models/user'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 8px;\r\n    flex-wrap: wrap;\r\n`\r\n\r\ninterface Props {\r\n    onOpenCreate: () => void\r\n    deleteLoading: boolean\r\n    deleteDisable: boolean\r\n    onDelete: () => void\r\n    userFilter?: UserFilter\r\n    onChangeFilter?: (value: UserFilter) => void\r\n    userSelect?: boolean\r\n    children?: React.ReactNode\r\n}\r\n\r\nconst PageToolbar: React.FC<Props> = ({\r\n    onOpenCreate,\r\n    deleteLoading,\r\n    deleteDisable,\r\n    onDelete,\r\n    userFilter,\r\n    onChangeFilter,\r\n    userSelect = false,\r\n    children\r\n}) => {\r\n    const catalog = useMemo(() =>\r\n        Object.entries(UserFilterSelect).map(([value, name]) => ({ id: value, name }))\r\n    ,[])\r\n    return (\r\n        <Wrapper>\r\n            <Space wrap>\r\n                <Button onClick={onOpenCreate}>\r\n                    <FileAddOutlined />\r\n                    <span>Создать</span>\r\n                </Button>\r\n                <Popconfirm\r\n                    disabled={deleteDisable}\r\n                    placement=\"bottom\"\r\n                    title=\"Вы точно хотите это удалить?\"\r\n                    onConfirm={onDelete}\r\n                    okText=\"Да\"\r\n                    cancelText=\"Нет\"\r\n                >\r\n                    <Button\r\n                        loading={deleteLoading}\r\n                        disabled={deleteDisable}>\r\n                        <DeleteOutlined />\r\n                        <span>Удалить</span>\r\n                    </Button>\r\n                </Popconfirm>\r\n                {children}\r\n            </Space>\r\n            {userSelect &&\r\n                <CatalogSelect\r\n                    catalog={catalog}\r\n                    defaultValue={userFilter}\r\n                    style={{ width: 155 }}\r\n                    onChange={onChangeFilter}\r\n                    allowClear={false}\r\n                />\r\n            }\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(PageToolbar)","import styled from \"styled-components\"\r\n\r\nexport const PageWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    .main-section {\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 8px;\r\n    }\r\n`","import { BaseDocFields, IndexedValues } from \"@models/base\"\r\nimport { Customer } from \"@pages/contracts/customers/models\"\r\n\r\nexport enum SubjectDealType {\r\n    favor = 'Оказание услуг',\r\n    contracts = 'Подрядные работы',\r\n    outsource = 'Аусорсинг'\r\n}\r\n\r\nexport enum StatusDealType {\r\n    sighed = 'Подписан',\r\n    terminated = 'Расторгнут',\r\n    on_considering = 'На рассмотрении'\r\n}\r\n\r\nexport const DealFieldNames: IndexedValues = {\r\n    name: 'Название',\r\n    comments: 'Комментарии',\r\n    number: 'Номер',\r\n    status: 'Статус',\r\n    auto_prolongation: 'Автопролонгация',\r\n    include_into_count: '№ договора в счетe',\r\n    address_into_count: 'Aдрес объекта в счетe',\r\n    company: 'Компания',\r\n    subject: 'Предмет договора',\r\n    name_1c: 'Наименование в 1С',\r\n    price: 'Цена договора',\r\n    customers: 'Заказчики',\r\n    contract_date: 'Дата подписания договора',\r\n    end_date: 'Дата окончания договора',\r\n}\r\n\r\nexport interface Deal extends BaseDocFields {\r\n    number: string\r\n    company: string\r\n    auto_prolongation: boolean\r\n    include_into_count: boolean\r\n    address_into_count: boolean\r\n    status: keyof typeof StatusDealType | null\r\n    subject: keyof typeof SubjectDealType | null\r\n    name_1c: string | null\r\n    price: number | null\r\n    contract_date: string | null\r\n    end_date: string | null\r\n    customers: Customer[]\r\n}","import { Deal } from \"@pages/contracts/deals/models\"\r\nimport { commonApi } from \"@store/common.api\"\r\nimport { userActions } from \"@store/user/user.slice\"\r\n\r\nexport const dealsApi = commonApi.injectEndpoints({\r\n    endpoints: build => ({\r\n        fetchDeals: build.query<Deal[], string>({\r\n            query: () => ({\r\n                url: '/deals',\r\n            }),\r\n            onQueryStarted(_, { dispatch, queryFulfilled }) {\r\n                queryFulfilled.then((data) => {})\r\n                    .catch((data) => data.error.status === 401 && dispatch(userActions.logout()))\r\n            },\r\n            providesTags: [{ type: 'Deals', id: 'LIST' }],\r\n        }),\r\n        createDeal: build.mutation<Deal, Omit<Deal, 'id'>>({\r\n            query: (newDeal) => ({\r\n                url: '/deals',\r\n                method: 'POST',\r\n                body: newDeal,\r\n            }),\r\n            //pessimistic update - after fulfilled query\r\n            onQueryStarted(_, { dispatch, queryFulfilled }) {\r\n                queryFulfilled\r\n                    .then(({ data }) => {\r\n                        dispatch(\r\n                            dealsApi.util.updateQueryData('fetchDeals', '', draft => {\r\n                                draft.push(data)\r\n                            })\r\n                        )\r\n                    })\r\n            },\r\n        }),\r\n        updateDeal: build.mutation<Deal, Deal>({\r\n            query: (updated) => ({\r\n                url: `/deals/${updated.id}`,\r\n                method: 'PUT',\r\n                body: updated,\r\n            }),\r\n            //pessimistic update - after fulfilled query\r\n            onQueryStarted(_, { dispatch, queryFulfilled }) {\r\n                queryFulfilled\r\n                    .then(({ data }) => {\r\n                        dispatch(\r\n                            dealsApi.util.updateQueryData('fetchDeals', '', draft => {\r\n                                let deal = draft.find(deal => deal.id === data.id)\r\n                                !!deal && Object.assign(deal, data)\r\n                            })\r\n                        )\r\n                    })\r\n            },\r\n        }),\r\n        deleteDeal: build.mutation<{}, number>({\r\n            query: (id) => ({\r\n                url: `/deals/${id}`,\r\n                method: 'DELETE',\r\n            }),\r\n            //refetch\r\n            invalidatesTags: (result, error, arg) => !error ? [{ type: 'Deals', id: 'LIST' }] : [],\r\n        }),\r\n    }),\r\n})\r\n\r\nexport const {\r\n    useCreateDealMutation,\r\n    useDeleteDealMutation,\r\n    useFetchDealsQuery,\r\n    useUpdateDealMutation,\r\n    useLazyFetchDealsQuery,\r\n} = dealsApi","import { Customer } from \"@pages/contracts/customers/models\"\r\nimport { commonApi } from \"@store/common.api\"\r\nimport { userActions } from \"@store/user/user.slice\"\r\n\r\nexport const customersApi = commonApi.injectEndpoints({\r\n    endpoints: build => ({\r\n        fetchCustomers: build.query<Customer[], string>({\r\n            query: () => ({\r\n                url: '/customers',\r\n            }),\r\n            onQueryStarted(_, { dispatch, queryFulfilled }) {\r\n                queryFulfilled.then((data) => {})\r\n                    .catch((data) => data.error.status === 401 && dispatch(userActions.logout()))\r\n            },\r\n            providesTags: [{ type: 'Customers', id: 'LIST' }],\r\n        }),\r\n        createCustomer: build.mutation<Customer, Omit<Customer, 'id'>>({\r\n            query: (newCustomer) => ({\r\n                url: '/customers',\r\n                method: 'POST',\r\n                body: newCustomer,\r\n            }),\r\n            //pessimistic update - after fulfilled query\r\n            onQueryStarted(_, { dispatch, queryFulfilled }) {\r\n                queryFulfilled\r\n                    .then(({ data }) => {\r\n                        dispatch(\r\n                            customersApi.util.updateQueryData('fetchCustomers', '', draft => {\r\n                                draft.push(data)\r\n                            })\r\n                        )\r\n                    })\r\n            },\r\n        }),\r\n        updateCustomer: build.mutation<Customer, Customer>({\r\n            query: (updated) => ({\r\n                url: `/customers/${updated.id}`,\r\n                method: 'PUT',\r\n                body: updated,\r\n            }),\r\n            //pessimistic update - after fulfilled query\r\n            onQueryStarted(_, { dispatch, queryFulfilled }) {\r\n                queryFulfilled\r\n                    .then(({ data }) => {\r\n                        dispatch(\r\n                            customersApi.util.updateQueryData('fetchCustomers', '', draft => {\r\n                                let customer = draft.find(customer => customer.id === data.id)\r\n                                !!customer && Object.assign(customer, data)\r\n                            })\r\n                        )\r\n                    })\r\n            },\r\n        }),\r\n        deleteCustomer: build.mutation<{}, number>({\r\n            query: (id) => ({\r\n                url: `/customers/${id}`,\r\n                method: 'DELETE',\r\n            }),\r\n            //refetch\r\n            invalidatesTags: (result, error, arg) => !error ? [{ type: 'Customers', id: 'LIST' }] : [],\r\n        }),\r\n    }),\r\n})\r\n\r\nexport const {\r\n    useCreateCustomerMutation,\r\n    useDeleteCustomerMutation,\r\n    useFetchCustomersQuery,\r\n    useUpdateCustomerMutation,\r\n    useLazyFetchCustomersQuery,\r\n} = customersApi","import type { UploadFile } from 'antd/es/upload/interface'\r\nimport { User } from \"./user\"\r\n\r\nexport interface IndexedValues { [key: string]: any }\r\n\r\nexport type TypeOfDoc = 'deal' | 'customer' | 'operation'\r\nexport type TypeOfDirectory = 'banks' |\r\n    'companyTypes' |\r\n    'contractStatuses' |\r\n    'costArticles' |\r\n    'documentTypes' |\r\n    'geographyCountries' |\r\n    'geographyRegions' |\r\n    'geographyLocalities' |\r\n    'gphServices' |\r\n    'inOutComeArticles' |\r\n    'jobPositions' |\r\n    'jobStatuses' |\r\n    'jobTypes' |\r\n    'measures' |\r\n    'purchaseKinds' |\r\n    'serviceKinds' |\r\n    'sourceOfPersons' |\r\n    'structureLegalEntities' |\r\n    'structureObjects' |\r\n    'structureTerritories' |\r\n    'structureWorkRegions' |\r\n    'taxTypes' |\r\n    'vacationKinds'\r\n\r\nexport type ChangeType = 'create' | 'update' | 'delete'\r\n\r\nexport interface Catalog {\r\n    id: string | number\r\n    name: string\r\n}\r\n\r\nexport interface BaseCatalogs {\r\n    [key: string]: Catalog[] | undefined\r\n}\r\n\r\nexport enum ChangeTypes {\r\n    create = 'Создание',\r\n    update = 'Обновление',\r\n    delete = 'Удаление'\r\n}\r\n\r\nexport interface HistoryLog {\r\n    id: string\r\n    who: User\r\n    when: string\r\n    change_type: ChangeType\r\n    what: string[]\r\n}\r\n\r\nexport interface BaseDocFields {\r\n    id: number\r\n    name: string\r\n    comments: string | null\r\n    type: TypeOfDoc\r\n    deleted: boolean\r\n    created_by: User\r\n    created_date: string\r\n    updated_by: User | null\r\n    updated_date: string | null\r\n    history_log: HistoryLog[]\r\n    attachments: UploadFile[]\r\n}\r\n\r\nexport interface BaseDirectoryFields {\r\n    id: number\r\n    name: string\r\n    type: TypeOfDirectory\r\n    deleted: boolean\r\n    created_by: User\r\n    created_date: string\r\n    updated_by: User | null\r\n    updated_date: string | null\r\n}","import React from 'react'\r\nimport { CloseOutlined, EditOutlined, PaperClipOutlined } from '@ant-design/icons'\r\nimport { Badge, Button, Space, Tooltip } from 'antd'\r\n\r\ninterface Props {\r\n    activeKey: string\r\n    isAttachments: boolean\r\n    openAttachments: () => void\r\n    edit: boolean\r\n    onEdit: () => void\r\n    onClose: () => void\r\n}\r\n\r\nconst TabsBar: React.FC<Props> = ({ activeKey, edit, onEdit, onClose, isAttachments, openAttachments }) => {\r\n    if (activeKey === '1') {\r\n        return (\r\n            <Space wrap>\r\n                <Tooltip title='Изменить'>\r\n                    <Button\r\n                        disabled={!edit}\r\n                        onClick={onEdit}\r\n                    >\r\n                        <EditOutlined />\r\n                    </Button>\r\n                </Tooltip>\r\n                <Tooltip title='Вложения'>\r\n                    <Badge\r\n                        dot\r\n                        style={{ display: isAttachments ? 'block' : 'none' }}\r\n                    >\r\n                        <Button onClick={openAttachments}>\r\n                            <PaperClipOutlined />\r\n                        </Button>\r\n                    </Badge>\r\n                </Tooltip>\r\n            <Tooltip title='Закрыть'>\r\n                <Button onClick={onClose}>\r\n                    <CloseOutlined />\r\n                </Button>\r\n                </Tooltip>\r\n            </Space>\r\n        )\r\n    } else {\r\n        return <Button onClick={onClose}><CloseOutlined /></Button>\r\n    }\r\n}\r\n\r\nexport default React.memo(TabsBar)","import React from 'react'\r\nimport { ColumnFilterItem } from 'antd/lib/table/interface'\r\nimport moment from 'moment'\r\nimport { Tag } from 'antd'\r\nimport { CustomColumnType } from \"@components/smartTable/lib/types\"\r\nimport { ChangeTypes, HistoryLog } from '@models/base'\r\nimport { DealFieldNames } from '../models'\r\n\r\nconst changeTypeFilters: ColumnFilterItem[] = [\r\n    { text: ChangeTypes.create, value: 'create' },\r\n    { text: ChangeTypes.update, value: 'update' },\r\n    { text: ChangeTypes.delete, value: 'delete' },\r\n]\r\n\r\nconst getHistoryColumns = (): CustomColumnType<HistoryLog>[] => ([\r\n    {\r\n        title: 'Имя пользователя',\r\n        dataIndex: ['who', 'name'],\r\n        key: 'who',\r\n        customFilter: 'search',\r\n        align: 'center',\r\n        width: 140\r\n    },\r\n    {\r\n        title: 'Дата действия',\r\n        dataIndex: 'when',\r\n        key: 'when',\r\n        customFilter: 'date-picker',\r\n        render: (value) => (!!value ? moment(value).format('L LT') : '-'),\r\n        sorter: (a, b) => moment(a.when).diff(b.when),\r\n        defaultSortOrder: 'descend',\r\n        align: 'center',\r\n        width: 140\r\n    },\r\n    {\r\n        title: 'Тип действия',\r\n        dataIndex: 'change_type',\r\n        key: 'change_type',\r\n        filters: changeTypeFilters,\r\n        onFilter: (value, record) => record.change_type.indexOf(String(value)) === 0,\r\n        sorter: (a, b) => a.change_type.localeCompare(b.change_type),\r\n        render: (_, record) => ChangeTypes[record.change_type],\r\n        align: 'center',\r\n        width: 140\r\n    },\r\n    {\r\n        title: 'Изменены поля',\r\n        dataIndex: 'what',\r\n        key: 'what',\r\n        render: (_, record) => Array.isArray(record.what) && record.what.map((field, i) => (\r\n                <Tag color=\"blue\" key={i} style={{ margin: '2px'}}>\r\n                    {DealFieldNames[field]}\r\n                </Tag>\r\n            )\r\n        ),\r\n        align: 'center',\r\n        width: 200\r\n    },\r\n])\r\n\r\nexport default getHistoryColumns","import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport SmartTable from '@components/smartTable'\r\nimport { HistoryLog } from '@models/base'\r\nimport getHistoryColumns from '../lib/getHistoryColumns'\r\nimport { Typography } from 'antd'\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    .ant-table-title {\r\n        padding: 1px 1px 1px 4px;\r\n    }\r\n`\r\n\r\ninterface Props {\r\n    data?: HistoryLog[]\r\n    title?: string\r\n}\r\n\r\nconst HistoryView: React.FC<Props> = ({ data, title }) => {\r\n    const dataSource = useMemo(() => data ?? [], [data])\r\n    const scroll = useMemo(() => ({ x: 600 }), [])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <SmartTable<HistoryLog>\r\n                title={() => <Typography.Title level={5}>{title}</Typography.Title>}\r\n                columns={getHistoryColumns()}\r\n                dataSource={dataSource}\r\n                pagination={false}\r\n                scroll={scroll}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(HistoryView)","import React from 'react'\r\nimport { ColumnFilterItem } from 'antd/lib/table/interface'\r\nimport { Checkbox, Tag, Tooltip } from 'antd'\r\nimport moment from 'moment'\r\nimport { CustomColumnType } from \"@components/smartTable/lib/types\"\r\nimport { Deal, SubjectDealType, StatusDealType } from \"../models\"\r\nimport { Customer } from '@pages/contracts/customers/models'\r\nimport parseBigValue from '@utils/parseBigValue'\r\n\r\n//TODO: change to server catalogs\r\nconst subjectFilters: ColumnFilterItem[] = [\r\n    { text: SubjectDealType.favor, value: 'favor' },\r\n    { text: SubjectDealType.contracts, value: 'contracts' },\r\n    { text: SubjectDealType.outsource, value: 'outsource' },\r\n]\r\n\r\nconst statusFilters: ColumnFilterItem[] = [\r\n    { text: StatusDealType.sighed, value: 'sighed' },\r\n    { text: StatusDealType.terminated, value: 'terminated' },\r\n    { text: StatusDealType.on_considering, value: 'on_considering' },\r\n]\r\n\r\nconst getDealsColumns = (customers?: Customer[]): CustomColumnType<Deal>[] => ([\r\n    {\r\n        title: 'Название',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        customFilter: 'search',\r\n        align: 'center',\r\n        fixed: 'left',\r\n        width: 200,\r\n    },\r\n    {\r\n        title: 'Номер',\r\n        dataIndex: 'number',\r\n        key: 'number',\r\n        customFilter: 'search',\r\n        align: 'center',\r\n        width: 120,\r\n        responsive: ['sm'],\r\n    },\r\n    {\r\n        title: 'Компания',\r\n        dataIndex: 'company',\r\n        key: 'company',\r\n        customFilter: 'search',\r\n        sorter: (a, b) => a.company?.localeCompare(b.company ?? '') ?? 0,\r\n        align: 'center',\r\n        width: 150,\r\n        responsive: ['sm'],\r\n    },\r\n    {\r\n        title: 'Предмет договора',\r\n        dataIndex: 'subject',\r\n        key: 'subject',\r\n        filters: subjectFilters,\r\n        onFilter: (value, record) => record.subject?.indexOf(String(value)) === 0,\r\n        sorter: (a, b) => a.subject?.localeCompare(b.subject ?? '') ?? 0,\r\n        render: (_, record) => record.subject && SubjectDealType[record.subject],\r\n        align: 'center',\r\n        width: 150,\r\n        responsive: ['md'],\r\n    },\r\n    {\r\n        title: 'Статус',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        filters: statusFilters,\r\n        onFilter: (value, record) => record.status?.indexOf(String(value)) === 0,\r\n        sorter: (a, b) => a.status?.localeCompare(b.status ?? '') ?? 0,\r\n        render: (_, record) => record.status && StatusDealType[record.status],\r\n        align: 'center',\r\n        width: 150,\r\n        responsive: ['md'],\r\n    },\r\n    {\r\n        title: 'Цена договора',\r\n        dataIndex: 'price',\r\n        key: 'price',\r\n        customFilter: 'slider',\r\n        initialSliderValues: { min: 0, max: 1000000, step: 1000, symbol: ' ₽'},\r\n        sorter: (a, b) => (a.price ?? 0) - (b.price ?? 0),\r\n        render: (value) => parseBigValue(value, 3) + ' ₽',\r\n        align: 'center',\r\n        width: 130,\r\n        responsive: ['lg'],\r\n    },\r\n    {\r\n        title: 'Дата подписания',\r\n        dataIndex: 'contract_date',\r\n        key: 'contract_date',\r\n        customFilter: 'date-picker',\r\n        render: (value) => (!!value ? moment(value).format('L') : '-'),\r\n        sorter: (a, b) => moment(a.contract_date).diff(b.contract_date),\r\n        align: 'center',\r\n        width: 150,\r\n        responsive: ['lg'],\r\n    },\r\n    {\r\n        title: 'Дата окончания',\r\n        dataIndex: 'end_date',\r\n        key: 'end_date',\r\n        customFilter: 'date-picker',\r\n        render: (value) => (!!value ? moment(value).format('L') : '-'),\r\n        sorter: (a, b) => moment(a.end_date).diff(b.end_date),\r\n        align: 'center',\r\n        width: 150,\r\n        responsive: ['lg'],\r\n    },\r\n    {\r\n        title: <Tooltip title={'Автоматическое продление срока действия договора'}>Пролонгация</Tooltip>,\r\n        dataIndex: 'auto_prolongation',\r\n        key: 'auto_prolongation',\r\n        render: (_, record) => <Checkbox checked={record.auto_prolongation} />,\r\n        align: 'center',\r\n        width: 130,\r\n        responsive: ['xl'],\r\n    },\r\n    {\r\n        title: <Tooltip title={'Указание номера договора в счете'}>Номер договора</Tooltip>,\r\n        dataIndex: 'include_into_count',\r\n        key: 'include_into_count',\r\n        render: (_, record) => <Checkbox checked={record.include_into_count} />,\r\n        align: 'center',\r\n        width: 130,\r\n        responsive: ['xl'],\r\n    },\r\n    {\r\n        title: <Tooltip title={'Указание адреса объекта в счете'}>Адрес объекта</Tooltip>,\r\n        dataIndex: 'address_into_count',\r\n        key: 'address_into_count',\r\n        render: (_, record) => <Checkbox checked={record.address_into_count} />,\r\n        align: 'center',\r\n        width: 130,\r\n        responsive: ['xl'],\r\n    },\r\n    {\r\n        title: 'Наименование в 1С',\r\n        dataIndex: 'name_1c',\r\n        key: 'name_1c',\r\n        customFilter: 'search',\r\n        align: 'center',\r\n        width: 150,\r\n        responsive: ['xl'],\r\n    },\r\n    {\r\n        title: 'Заказчики',\r\n        dataIndex: 'customers',\r\n        key: 'customers',\r\n        filters: customers?.map((customer) => ({ text: customer.name, value: customer.id }))\r\n            .sort((a, b) => a.text.localeCompare(b.text)),\r\n        onFilter: (value, record) => record.customers?.some((customer) => customer.id === value) ?? false,\r\n        render: (_, record) => (\r\n            <>\r\n                {record.customers?.map((customer) => (\r\n                    <Tooltip title={`ИНН: ${customer.INN}, КПП: ${customer.KPP}`}>\r\n                        <Tag color=\"blue\" key={customer.id}>\r\n                            {customer.name}\r\n                        </Tag>\r\n                    </Tooltip>\r\n                ))}\r\n            </>\r\n        ),\r\n        align: 'center',\r\n        width: 200,\r\n        responsive: ['xl'],\r\n    },\r\n])\r\n\r\nexport default getDealsColumns","import React from 'react'\r\nimport { Checkbox, DatePicker, FormInstance, FormItemProps, Input } from \"antd\"\r\nimport moment from 'moment'\r\nimport { CatalogSelect, RubInput } from '@components/controllers'\r\nimport { BaseCatalogs } from '@models/base'\r\n\r\nconst getUpdatedFields = <T,>(form: FormInstance<T>, catalogs?: BaseCatalogs): (FormItemProps<T> & { key: React.Key })[] => [\r\n    {\r\n        key: \"name\",\r\n        name: \"name\",\r\n        label: \"Название\",\r\n        rules: [{ required: true }],\r\n        children: <Input />\r\n    },\r\n    {\r\n        key: \"number\",\r\n        name: \"number\",\r\n        label: \"Номер\",\r\n        rules: [{ required: true }],\r\n        children: <Input />\r\n    },\r\n    {\r\n        key: \"company\",\r\n        name: \"company\",\r\n        label: \"Компания\",\r\n        rules: [{ required: true }],\r\n        children: <Input />\r\n    },\r\n    {\r\n        key: \"subject\",\r\n        name: \"subject\",\r\n        label: \"Предмет договора\",\r\n        children: <CatalogSelect catalog={catalogs?.subjects} onChange={(value) =>\r\n            form.setFieldValue('subject', value === undefined ? null : value)} />\r\n    },\r\n    {\r\n        key: \"status\",\r\n        name: \"status\",\r\n        label: \"Статус\",\r\n        children: <CatalogSelect catalog={catalogs?.statuses} onChange={(value) =>\r\n            form.setFieldValue('status', value === undefined ? null : value)} />\r\n    },\r\n    {\r\n        key: \"name_1c\",\r\n        name: \"name_1c\",\r\n        label: \"Наименование в 1С\",\r\n        children: <Input />\r\n    },\r\n    {\r\n        key: \"customers\",\r\n        name: \"customers\",\r\n        label: \"Заказчики\",\r\n        children: <CatalogSelect catalog={catalogs?.customers} onChange={(value) =>\r\n            form.setFieldValue('customers', value === undefined ? null : value)} />\r\n    },\r\n    {\r\n        key: \"price\",\r\n        name: \"price\",\r\n        label: \"Цена договора\",\r\n        children: <RubInput />\r\n    },\r\n    {\r\n        key: \"contract_date\",\r\n        name: \"contract_date\",\r\n        label: \"Дата подписания договора\",\r\n        children: <DatePicker\r\n            onChange={(value) => form.setFieldValue('contract_date', value?.toISOString() ?? null)}\r\n            format={'L'} />,\r\n        getValueProps: (date: string) =>  ({ value: !!date ? moment(date) : undefined }),\r\n    },\r\n    {\r\n        key: \"end_date\",\r\n        name: \"end_date\",\r\n        label: \"Дата окончания договора\",\r\n        children: <DatePicker\r\n        onChange={(value) => form.setFieldValue('end_date', value?.toISOString() ?? null)}\r\n            format={'L'} />,\r\n        getValueProps: (date: string) =>  ({ value: !!date ? moment(date) : undefined }),\r\n    },\r\n    {\r\n        key: \"auto_prolongation\",\r\n        name: \"auto_prolongation\",\r\n        label: \"Автопролонгация\",\r\n        valuePropName: \"checked\",\r\n        children: <Checkbox />,\r\n    },\r\n    {\r\n        key: \"include_into_count\",\r\n        name: \"include_into_count\",\r\n        label: \"№ договора в счетe\",\r\n        valuePropName: \"checked\",\r\n        children: <Checkbox />,\r\n    },\r\n    {\r\n        key: \"address_into_count\",\r\n        name: \"address_into_count\",\r\n        label: \"Aдрес объекта в счетe\",\r\n        valuePropName: \"checked\",\r\n        children: <Checkbox />,\r\n    },\r\n    {\r\n        key: \"comments\",\r\n        name: \"comments\",\r\n        label: \"Комментарии\",\r\n        children: <Input.TextArea />\r\n    },\r\n]\r\n\r\nexport default getUpdatedFields","import React from 'react'\r\nimport { \r\n    Checkbox, \r\n    DatePicker, \r\n    FormInstance, \r\n    FormItemProps, \r\n    Input, \r\n} from 'antd'\r\nimport { RubInput, CatalogSelect } from '@components/controllers'\r\nimport { BaseCatalogs } from '@models/base'\r\n\r\nconst getCreatedFields = <T,>(form: FormInstance<T>, catalogs?: BaseCatalogs): (FormItemProps<T> & { key: React.Key })[] => [\r\n    {\r\n        key: \"name\",\r\n        name: \"name\",\r\n        label: \"Название\",\r\n        rules: [{ required: true }],\r\n        children: <Input />\r\n    },\r\n    {\r\n        key: \"number\",\r\n        name: \"number\",\r\n        label: \"Номер\",\r\n        rules: [{ required: true }],\r\n        children: <Input />\r\n    },\r\n    {\r\n        key: \"company\",\r\n        name: \"company\",\r\n        label: \"Компания\",\r\n        rules: [{ required: true }],\r\n        children: <Input />\r\n    },\r\n    {\r\n        key: \"subject\",\r\n        name: \"subject\",\r\n        label: \"Предмет договора\",\r\n        children: <CatalogSelect catalog={catalogs?.subjects} />\r\n    },\r\n    {\r\n        key: \"status\",\r\n        name: \"status\",\r\n        label: \"Статус\",\r\n        children: <CatalogSelect catalog={catalogs?.statuses} />\r\n    },\r\n    {\r\n        key: \"name_1c\",\r\n        name: \"name_1c\",\r\n        label: \"Наименование в 1С\",\r\n        children: <Input />\r\n    },\r\n    {\r\n        key: \"customers\",\r\n        name: \"customers\",\r\n        label: \"Заказчики\",\r\n        children: <CatalogSelect catalog={catalogs?.customers} mode=\"multiple\" />\r\n    },\r\n    {\r\n        key: \"price\",\r\n        name: \"price\",\r\n        label: \"Цена договора\",\r\n        children: <RubInput />\r\n    },\r\n    {\r\n        key: \"contract_date\",\r\n        name: \"contract_date\",\r\n        label: \"Дата подписания договора\",\r\n        children: <DatePicker format={'L'} />\r\n    },\r\n    {\r\n        key: \"end_date\",\r\n        name: \"end_date\",\r\n        label: \"Дата окончания договора\",\r\n        children: <DatePicker format={'L'} />\r\n    },\r\n    {\r\n        key: \"auto_prolongation\",\r\n        name: \"auto_prolongation\",\r\n        valuePropName: \"checked\",\r\n        children: <Checkbox>Автопролонгация</Checkbox>,\r\n        wrapperCol: { xs: { offset: 0 }, sm: { offset: 12 } },\r\n    },\r\n    {\r\n        key: \"include_into_count\",\r\n        name: \"include_into_count\",\r\n        valuePropName: \"checked\",\r\n        children: <Checkbox>Включить № договора в счет</Checkbox>,\r\n        wrapperCol: { xs: { offset: 0 }, sm: { offset: 12 } },\r\n    },\r\n    {\r\n        key: \"address_into_count\",\r\n        name: \"address_into_count\",\r\n        valuePropName: \"checked\",\r\n        children: <Checkbox>Включить адрес объекта в счет</Checkbox>,\r\n        wrapperCol: { xs: { offset: 0 }, sm: { offset: 12 } },\r\n    },\r\n    {\r\n        key: \"comments\",\r\n        name: \"comments\",\r\n        label: \"Комментарии\",\r\n        children: <Input.TextArea />\r\n    },\r\n]\r\n\r\nexport default getCreatedFields","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useCallback, useMemo } from \"react\"\r\nimport { message } from \"antd\"\r\nimport moment, { isMoment } from \"moment\"\r\nimport { v4 } from \"uuid\"\r\nimport { MutationDefinition } from \"@reduxjs/toolkit/dist/query\"\r\nimport { MutationTrigger } from \"@reduxjs/toolkit/dist/query/react/buildHooks\"\r\nimport { Deal } from \"../models\"\r\nimport { User } from \"@models/user\"\r\nimport { getChangedFields } from \"@utils/getChangedFields\"\r\n\r\ninterface Props {\r\n    user: User\r\n    createDeal: MutationTrigger<MutationDefinition<Omit<Deal, \"id\">, any, any, Deal, string>>\r\n    deleteDeal: MutationTrigger<MutationDefinition<number, any, any, {}, string>>\r\n    updateDeal: MutationTrigger<MutationDefinition<Deal, any, any, Deal, string>>\r\n    createClose: () => void\r\n    selectedRowKeys: React.Key[]\r\n    setSelectedRowKeys: React.Dispatch<React.SetStateAction<React.Key[]>>\r\n    resetSelectedItem: () => void\r\n    selectedItem: any\r\n    changeSelectedItem: (value: any) => void\r\n    offEdit: () => void\r\n}\r\n\r\nexport const useDealActions = ({\r\n    user,\r\n    createDeal,\r\n    updateDeal,\r\n    deleteDeal,\r\n    createClose,\r\n    selectedRowKeys,\r\n    setSelectedRowKeys,\r\n    resetSelectedItem,\r\n    selectedItem,\r\n    changeSelectedItem,\r\n    offEdit\r\n}: Props) => {\r\n    //Creating\r\n    const createInitialValues: Partial<Deal> = useMemo(() => ({\r\n        comments: null,\r\n        customers: [],\r\n        contract_date: null,\r\n        end_date: null,\r\n        name_1c: null,\r\n        price: null,\r\n        status: null,\r\n        subject: null,\r\n        auto_prolongation: false,\r\n        include_into_count: false,\r\n        address_into_count: false\r\n    }), [])\r\n\r\n    const onCreate = useCallback( async (values: any) => {\r\n        const data = { ...values } as Omit<Deal, 'id'>\r\n        const dateNow = moment().toISOString()\r\n        data.contract_date = isMoment(values.contract_date)\r\n            ? values.contract_date.toISOString() : null\r\n        data.end_date = isMoment(values.end_date)\r\n            ? values.end_date.toISOString() : null\r\n        data.type = 'deal'\r\n        data.deleted = false\r\n        data.created_by = user\r\n        data.created_date = dateNow\r\n        data.updated_by = null\r\n        data.updated_date = null\r\n        data.attachments = []\r\n        data.history_log = [{\r\n            id: v4(),\r\n            who: user,\r\n            change_type: 'create',\r\n            what: [],\r\n            when: dateNow\r\n        }]\r\n        createDeal(data)\r\n            .unwrap()\r\n            .then(() => {\r\n                message.success(`Договор успешно создан`)\r\n                createClose()\r\n            })\r\n    }, [user])\r\n\r\n    //Deleting\r\n    const onDelete = useCallback((id: number) => deleteDeal(id), []) \r\n    const onGroupDelete = useCallback(async () => {\r\n        Promise.all(selectedRowKeys.map((id) => onDelete(Number(id)).unwrap()))\r\n            .then(() => {\r\n                message.success(`Удаление успешно`)\r\n                setSelectedRowKeys([])\r\n                resetSelectedItem()\r\n            })\r\n    }, [selectedRowKeys])\r\n\r\n    //Updating\r\n    const onUpdate = useCallback((values: any) => {\r\n        const data = { ...(selectedItem ?? {}), ...values} as Deal\r\n        const changedFields = getChangedFields(selectedItem ?? {}, data)\r\n        if (!!changedFields.length) {\r\n            const dateNow = moment().toISOString()\r\n            data.updated_by = user\r\n            data.updated_date = dateNow\r\n            data.history_log = [\r\n                ...selectedItem?.history_log,\r\n                {\r\n                    id: v4(),\r\n                    who: user,\r\n                    change_type: 'update',\r\n                    when: dateNow,\r\n                    what: changedFields,\r\n                }\r\n            ]\r\n            updateDeal(data).unwrap().then((updated) => {\r\n                message.success(`Договор успешно изменен`)\r\n                changeSelectedItem(updated)\r\n                offEdit()\r\n            })\r\n        } else {\r\n            offEdit()\r\n        }\r\n    }, [selectedItem, user])\r\n\r\n    return { onCreate, createInitialValues, onGroupDelete, onUpdate }\r\n}","import equal from 'deep-equal'\r\nimport { IndexedValues } from \"@models/base\"\r\n\r\nexport const getChangedFields = (obj1: IndexedValues, obj2: IndexedValues, changedFields: string[] = []) => {\r\n    Object.keys(obj1).forEach((key) => {\r\n        if (!equal(obj1[key], obj2[key])) {\r\n            changedFields.push(key)\r\n        }\r\n    })\r\n    return changedFields\r\n}","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Alert, Modal, message, Upload } from 'antd'\r\nimport { InboxOutlined } from '@ant-design/icons'\r\nimport type { UploadProps } from 'antd'\r\nimport type { UploadFile } from 'antd/es/upload/interface'\r\n\r\ninterface Props {\r\n    isModalVisible: boolean\r\n    hideModal: () => void\r\n    attachments?: UploadFile[] | null\r\n}\r\n\r\nconst AttachmentsModal: React.FC<Props> = ({ attachments, isModalVisible, hideModal }) => {\r\n    const [fileList, setFileList] = useState<UploadFile[]>([])\r\n    const resetFileList = useCallback(() => setFileList([...(attachments ?? [])]), [attachments])\r\n\r\n    const [modalLoading, setModalLoading] = useState<boolean>(false)\r\n    const [modalError, setmodalError] = useState<string | null>(null)\r\n\r\n    const handleChange: UploadProps['onChange'] = (info) => {\r\n        if (info.file.status === 'removed') {\r\n            setFileList((prev) => prev.filter((file) => file.uid !== info.file.uid))\r\n        } else {\r\n            setFileList((prev) => [...prev, info.file])\r\n        }\r\n    }\r\n\r\n    const onOk = async () => {\r\n        setmodalError(null)\r\n        setModalLoading(true)\r\n        try {\r\n            message.success('Файлы успешно загружены')\r\n            setTimeout(() => {\r\n                setModalLoading(false)\r\n                hideModal()\r\n            }, 1500)\r\n        } catch (e) {\r\n            setmodalError(e as string)\r\n        }\r\n    }\r\n\r\n    const onCancel = () => {\r\n        resetFileList()\r\n        hideModal()\r\n    }\r\n\r\n    useEffect(() => {\r\n        resetFileList()\r\n    }, [resetFileList])\r\n\r\n    //console.log(fileList)\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Список документов\"\r\n            open={isModalVisible}\r\n            okText='Сохранить'\r\n            cancelText='Отменить'\r\n            onOk={onOk}\r\n            confirmLoading={modalLoading}\r\n            onCancel={onCancel}\r\n        >\r\n            <Upload.Dragger\r\n                name='file'\r\n                multiple\r\n                beforeUpload={() => false}\r\n                onChange={handleChange}\r\n                fileList={fileList}\r\n            >\r\n                <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Кликните или перетащите файл, чтобы загрузить</p>\r\n                <p className=\"ant-upload-hint\">Поддерживается загрузка одного файла или группы выбранных файлов</p>\r\n            </Upload.Dragger>\r\n            {!!modalError && <Alert type='error' message={modalError} />}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default React.memo(AttachmentsModal)","import React, { useCallback, useMemo } from 'react'\r\nimport { \r\n    Alert,\r\n    Button, \r\n    Form, \r\n    Space, \r\n    FormInstance, \r\n    FormItemProps\r\n} from 'antd'\r\nimport { BaseCatalogs } from '@models/base'\r\n\r\ninterface Props<T> {\r\n    getFields: (form: FormInstance<T>, catalogs?: BaseCatalogs) => (FormItemProps<T> & {key: React.Key})[]\r\n    onFinish: (values: T) => Promise<void>\r\n    loading: boolean\r\n    error: any\r\n    initialValues?: Partial<T>\r\n    catalogs?: BaseCatalogs\r\n}\r\n\r\nconst CreateDealForm = <T,>({ getFields, onFinish, error, loading, initialValues, catalogs }: Props<T>) => {\r\n    const [form] = Form.useForm<T>()\r\n    const fields = useMemo(() => getFields(form, catalogs), [catalogs, form, getFields])\r\n    const buttonsLayout = useMemo(() => ({\r\n        wrapperCol: { xs: { offset: 0 }, sm: { offset: 12 } }\r\n    }), [])\r\n\r\n    const onReset = useCallback(() => form.resetFields(), [form])\r\n\r\n    const handleFinish = useCallback((values: T) => {\r\n        onFinish(values).then(onReset)\r\n    }, [onFinish, onReset])\r\n\r\n    return (\r\n        <Form\r\n            form={form}\r\n            onFinish={handleFinish}\r\n            onReset={onReset}\r\n            initialValues={initialValues}\r\n            autoComplete=\"off\"\r\n            labelCol={{ span: 12 }}\r\n            wrapperCol={{ span: 12 }}\r\n        >\r\n            {fields.map((props) =>\r\n                <Form.Item {...props} />\r\n            )}\r\n            {!!error &&\r\n                <Form.Item>\r\n                    <Alert message={JSON.stringify(error)} type=\"error\" />\r\n                </Form.Item>\r\n            }\r\n            <Form.Item {...buttonsLayout}>\r\n                <Space>\r\n                    <Button loading={loading} type=\"primary\" htmlType=\"submit\">\r\n                        Создать\r\n                    </Button>\r\n                    <Button htmlType=\"reset\">\r\n                        Очистить\r\n                    </Button>\r\n                </Space>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default React.memo(CreateDealForm) as typeof CreateDealForm","import React, { useEffect, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Alert, Button, Form, FormInstance, FormItemProps, Space } from 'antd'\r\nimport { RecursivePartial } from '@models/index'\r\nimport { BaseCatalogs } from '@models/base'\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow-y: auto;\r\n\r\n    .ant-form-item {\r\n        margin-bottom: 12px;\r\n    }\r\n    .ant-form-item-label {\r\n        padding: 0;\r\n    }\r\n`\r\n\r\ninterface Props<T> {\r\n    edit: boolean\r\n    offEdit: () => void\r\n    selected: T | null\r\n    getFields: (form: FormInstance<T>, catalogs?: BaseCatalogs) => (FormItemProps<T> & { key: React.Key })[]\r\n    onFinish: (values: T) => void\r\n    loading: boolean\r\n    error: any\r\n    catalogs?: BaseCatalogs\r\n}\r\n\r\nconst ViewEditForm = <T,>({ edit, offEdit, selected, getFields, onFinish, loading, error, catalogs }: Props<T>) => {\r\n    const [form] = Form.useForm<T>()\r\n    const fields = useMemo(() => getFields(form, catalogs), [catalogs, form, getFields])\r\n    const buttonsLayout = useMemo(() => ({\r\n        wrapperCol: { xs: { offset: 0 }, sm: { offset: 12 } }\r\n    }), [])\r\n\r\n    const onReset = () => {\r\n        !!selected && form.setFieldsValue(selected as RecursivePartial<T>)\r\n        offEdit()\r\n    }\r\n\r\n    useEffect(() => {\r\n        !!selected && form.setFieldsValue(selected as RecursivePartial<T>)\r\n    }, [form, selected])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Form\r\n                form={form}\r\n                onFinish={onFinish}\r\n                onReset={onReset}\r\n                disabled={edit}\r\n                labelCol={{ span: 12 }}\r\n                wrapperCol={{ span: 12 }}\r\n            >\r\n                {fields.map((props) =>\r\n                    <Form.Item {...props} />\r\n                )}\r\n                {!!error &&\r\n                    <Form.Item >\r\n                        <Alert message={JSON.stringify(error)} type=\"error\" />\r\n                    </Form.Item>\r\n                }\r\n                {!edit &&\r\n                    <Form.Item {...buttonsLayout}>\r\n                        <Space>\r\n                            <Button\r\n                                loading={loading}\r\n                                htmlType='submit'\r\n                                type=\"primary\"\r\n                            >\r\n                                Сохранить</Button>\r\n                            <Button htmlType='reset'>Отменить</Button>\r\n                        </Space>\r\n                    </Form.Item>\r\n                }\r\n            </Form>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ViewEditForm) as typeof ViewEditForm","import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tabs, TabsProps } from 'antd'\r\n\r\nconst StyledTabs = styled(Tabs)`\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    .ant-tabs, \r\n    .ant-tabs-content,\r\n    .ant-tabs-content-holder,\r\n    .ant-tabs-tabpane {\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    .ant-tabs-tab {\r\n        padding: 0;\r\n    }\r\n    .ant-tabs-nav::before {\r\n    bottom: -8px;\r\n}\r\n`\r\n\r\ninterface Props {\r\n    activeKey: string\r\n    toggleActiveKey: (activeKey: string) => void\r\n    tabsBar: React.ReactNode\r\n    tabsItems: TabsProps['items']\r\n}\r\n\r\nconst ViewTabs: React.FC<Props> = ({ activeKey, toggleActiveKey, tabsBar, tabsItems }) => {\r\n    const tabBarExtraContent = useMemo(() => ({\r\n        right: tabsBar\r\n    }), [tabsBar])\r\n\r\n    return (\r\n        <StyledTabs\r\n            activeKey={activeKey}\r\n            onChange={toggleActiveKey}\r\n            tabBarExtraContent={tabBarExtraContent}\r\n            items={tabsItems}\r\n        />\r\n    )\r\n}\r\n\r\nexport default React.memo(ViewTabs)","import React from 'react'\r\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from 'react-reflex'\r\n\r\ninterface Props<T> {\r\n    mainSection: React.ReactNode\r\n    viewSection: React.ReactNode\r\n    selectedItem: T | null\r\n    width: number\r\n}\r\n\r\nconst ResizeTemplate = <T,>({ mainSection, viewSection, selectedItem, width }: Props<T>) => {\r\n    const full = width > 940\r\n    const collapsed = width < 940\r\n    return (\r\n        <ReflexContainer orientation=\"vertical\" windowResizeAware style={{ display: full ? 'flex' : 'block' }}>\r\n            {!(!!selectedItem && collapsed) && <ReflexElement className=\"left-pane\" minSize={385}>\r\n                {mainSection}\r\n            </ReflexElement>}\r\n            {!!selectedItem && full && <ReflexSplitter style={{ margin: '0 8px' }} />}\r\n            {!!selectedItem && <ReflexElement className=\"right-pane\" minSize={410} size={600} >\r\n                {viewSection}\r\n            </ReflexElement>}\r\n        </ReflexContainer>\r\n    )\r\n}\r\n\r\nexport default React.memo(ResizeTemplate) as typeof ResizeTemplate","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useMemo } from 'react'\r\nimport { Alert, Drawer, Typography } from 'antd'\r\n//store\r\nimport { useCreateDealMutation, useDeleteDealMutation, useFetchDealsQuery, useUpdateDealMutation } from './api/deals.api'\r\nimport { useFetchCustomersQuery } from '../customers/api/customers.api'\r\n//models\r\nimport { Deal, StatusDealType, SubjectDealType } from './models'\r\nimport { BaseCatalogs, Catalog } from '@models/base'\r\n//lib & ui\r\nimport TabsBar from './ui/TabsBar'\r\nimport HistoryTable from './ui/HistoryView'\r\nimport getDealsColumns from './lib/getDealsColumns'\r\nimport getUpdatedFields from './lib/getUpdatedFields'\r\nimport getCreatedFields from './lib/getCreatedFields'\r\nimport { useDealActions } from './lib/useDealActions'\r\n//components\r\nimport SmartTable from '@components/smartTable'\r\nimport AttachmentsModal from '@components/modals/AttachmentsModal'\r\nimport PageToolbar from '@components/templates/PageToolbar'\r\nimport CreateForm from '@components/templates/CreateForm'\r\nimport ViewEditForm from '@components/templates/ViewEditForm'\r\nimport ViewTabs from '@components/templates/ViewTabs'\r\nimport ResizeTemplate from '@components/templates/ResizeTemplate'\r\nimport { PageWrapper } from '@components/templates/PageWrapper'\r\n//hooks\r\nimport useWindowSize from '@utils/hooks/useWindowSize'\r\nimport { useModal } from '@utils/hooks/useModal'\r\nimport { useDrawer } from '@utils/hooks/useDrawer'\r\nimport { useTabs } from '@utils/hooks/useTabs'\r\nimport { useTable } from '@utils/hooks/useTable'\r\nimport { useUserFilter } from '@utils/hooks/useUserFilter'\r\nimport { useUser } from '@utils/hooks/useUser'\r\n\r\nconst Page: React.FC = () => {\r\n    const user = useUser()\r\n    const { width, height } = useWindowSize()\r\n\r\n    //Queries & mutations\r\n    const { data: deals, isFetching, isLoading, error } = useFetchDealsQuery('')\r\n    const [deleteDeal, { isLoading: deleteDealLoading, error: deleteDealError }] = useDeleteDealMutation()\r\n    const [updateDeal, { isLoading: updateDealLoading, error: updateDealError }] = useUpdateDealMutation()\r\n    const [createDeal, { isLoading: createDealLoading, error: createDealError }] = useCreateDealMutation()\r\n    //Catalogs\r\n    //TODO: change to real server catalogs\r\n    const { data: customers } = useFetchCustomersQuery('')\r\n    const catalogs: BaseCatalogs = useMemo(() => {\r\n        const subjects: Catalog[] = Object.entries(SubjectDealType).map(([value, name]) => ({ id: value, name }))\r\n        const statuses: Catalog[] = Object.entries(StatusDealType).map(([value, name]) => ({ id: value, name }))\r\n        return {\r\n            customers,\r\n            subjects,\r\n            statuses\r\n        }\r\n    }, [customers])\r\n\r\n    //Table\r\n    const {\r\n        selectedItem,\r\n        changeSelectedItem,\r\n        resetSelectedItem, \r\n        onRowClick, \r\n        rowSelection, \r\n        selectedRowKeys, \r\n        setSelectedRowKeys, \r\n    } = useTable<Deal>()\r\n    const columns = useMemo(() => getDealsColumns() ,[])\r\n    const scroll = useMemo(() => ({ x: 'max-content', y: height - 260 }), [height])\r\n    const pagination = useMemo(() => (\r\n        {\r\n            showTotal: (total: number) =>\r\n                <Typography.Title \r\n                    style={{ margin: 0, lineHeight: '32px' }} \r\n                    level={5}>Всего элементов: {total}\r\n                </Typography.Title>,\r\n            showSizeChanger: true\r\n        }\r\n    ), [])\r\n    //Filter\r\n    const { filteredEntities, userFilter, toggleFilter } = useUserFilter<Deal>(user.id, deals)\r\n    //ViewTabs\r\n    const { activeKey, toggleActiveKey, edit, offEdit, onEdit, onCloseTabs } = useTabs(resetSelectedItem)\r\n    //Drawer\r\n    const [createDrawer, createShow, createClose] = useDrawer()\r\n    //Attachments modal\r\n    const [attachmentsModal, attachmentsShow, attachmentsHide] = useModal()\r\n    //Fields\r\n    const updatedFields = useCallback(getUpdatedFields<Deal>, [])\r\n    const createdFields = useCallback(getCreatedFields<Deal>, [])\r\n    //Actions\r\n    const { createInitialValues, onCreate, onUpdate, onGroupDelete } = useDealActions({\r\n        user,\r\n        createDeal,\r\n        deleteDeal,\r\n        updateDeal,\r\n        createClose,\r\n        selectedRowKeys,\r\n        setSelectedRowKeys,\r\n        resetSelectedItem,\r\n        selectedItem,\r\n        changeSelectedItem,\r\n        offEdit\r\n    })\r\n\r\n    //TabsItems\r\n    const tabsItems = useMemo(() => [\r\n        {\r\n            key: '1',\r\n            label: 'Основные данные',\r\n            children: <ViewEditForm<Deal>\r\n                onFinish={onUpdate}\r\n                getFields={updatedFields}\r\n                error={updateDealError}\r\n                loading={updateDealLoading}\r\n                edit={edit}\r\n                offEdit={offEdit}\r\n                selected={selectedItem}\r\n                catalogs={catalogs}\r\n            />\r\n        },\r\n        {\r\n            key: '2',\r\n            label: 'История',\r\n            children: <HistoryTable\r\n                data={selectedItem?.history_log}\r\n                title={selectedItem?.name}\r\n            />\r\n        },\r\n    ], [onUpdate, updateDealError, updateDealLoading, edit, selectedItem])\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <ResizeTemplate<Deal>\r\n                selectedItem={selectedItem}\r\n                width={width}\r\n                mainSection={\r\n                    <section className=\"main-section\">\r\n                        <PageToolbar\r\n                            deleteDisable={!selectedRowKeys.length}\r\n                            deleteLoading={deleteDealLoading}\r\n                            userFilter={userFilter}\r\n                            onChangeFilter={toggleFilter}\r\n                            onOpenCreate={createShow}\r\n                            onDelete={onGroupDelete}\r\n                            userSelect\r\n                        />\r\n                        <SmartTable<Deal>\r\n                            columns={columns}\r\n                            dataSource={filteredEntities}\r\n                            rowSelection={rowSelection}\r\n                            loading={isFetching || isLoading}\r\n                            scroll={scroll}\r\n                            onRow={onRowClick}\r\n                            pagination={pagination}\r\n                        />\r\n                        {(!!error || !!deleteDealError) && <Alert message={JSON.stringify(error || deleteDealError)} type=\"error\" />}\r\n                    </section>\r\n                }\r\n                viewSection={\r\n                    <ViewTabs\r\n                        activeKey={activeKey}\r\n                        toggleActiveKey={toggleActiveKey}\r\n                        tabsBar={\r\n                            <TabsBar\r\n                                activeKey={activeKey}\r\n                                edit={edit}\r\n                                onEdit={onEdit}\r\n                                isAttachments={!!selectedItem?.attachments?.length}\r\n                                openAttachments={attachmentsShow}\r\n                                onClose={onCloseTabs}\r\n                            />\r\n                        }\r\n                        tabsItems={tabsItems}\r\n                    />\r\n                }\r\n            />\r\n            <Drawer\r\n                title=\"Создать договор\"\r\n                placement=\"right\"\r\n                onClose={createClose}\r\n                open={createDrawer}\r\n                width={width > 700 ? 530 : width}\r\n            >\r\n                <CreateForm<Deal>\r\n                    getFields={createdFields}\r\n                    onFinish={onCreate}\r\n                    error={createDealError}\r\n                    loading={createDealLoading}\r\n                    initialValues={createInitialValues}\r\n                    catalogs={catalogs}\r\n                />\r\n            </Drawer>\r\n            <AttachmentsModal\r\n                attachments={selectedItem?.attachments}\r\n                isModalVisible={attachmentsModal}\r\n                hideModal={attachmentsHide}\r\n            />\r\n        </PageWrapper>\r\n    )\r\n}\r\n\r\nexport default Page","import { BaseDocFields } from \"@models/base\"\r\nimport { UserFilter } from \"@models/user\"\r\nimport { useCallback, useMemo, useState } from \"react\"\r\n\r\nexport const useUserFilter = <T extends BaseDocFields,>(userId: number, data?: T[]) => {\r\n    const [userFilter, setUserFilter] = useState<UserFilter>('all')\r\n    const toggleFilter = useCallback((value: UserFilter) => setUserFilter(value), [])\r\n\r\n    const filteredEntities = useMemo(() => {\r\n        if (!!data?.length) {\r\n            return userFilter === 'user'\r\n                ? data?.filter((entity) => entity.created_by.id === userId)\r\n                : data\r\n        } else {\r\n            return []\r\n        }\r\n    }, [data, userFilter, userId])\r\n\r\n    return { userFilter, toggleFilter, filteredEntities }\r\n}","import { useCallback, useState } from \"react\"\r\n\r\nexport const useTabs = (onClose: () => void) => {\r\n    //Editing\r\n    const [edit, setEdit] = useState<boolean>(true)\r\n    const onEdit = useCallback(() => setEdit(false), [])\r\n    const offEdit = useCallback(() => setEdit(true), [])\r\n\r\n    //Tabs\r\n    const [activeKey, setActiveKey] = useState<string>('1')\r\n    const toggleActiveKey = useCallback((key: string) => setActiveKey(key), [])\r\n    const onCloseTabs = useCallback(() => {\r\n        offEdit()\r\n        onClose()\r\n    }, [offEdit, onClose])\r\n\r\n    return {\r\n        edit,\r\n        onEdit,\r\n        offEdit,\r\n        activeKey,\r\n        toggleActiveKey,\r\n        onCloseTabs\r\n    }\r\n}","import { useCallback, useState } from \"react\"\r\n\r\nexport const useDrawer = () => {\r\n    const [openDrawer, setOpenDrawer] = useState<boolean>(false)\r\n    const showDrawer = useCallback(() => setOpenDrawer(true), [])\r\n    const closeDrawer = useCallback(() => setOpenDrawer(false), [])\r\n\r\n    return [\r\n        openDrawer,\r\n        showDrawer,\r\n        closeDrawer\r\n    ] as [boolean, () => void, () => void]\r\n}","import { useCallback, useState } from \"react\"\r\n\r\nexport const useModal = () => {\r\n    const [isModalVisible, setIsModalVisible] = useState<boolean>(false)\r\n    const showModal = useCallback(() => setIsModalVisible(true), [])\r\n    const hideModal = useCallback(() => setIsModalVisible(false), [])\r\n\r\n    return [\r\n        isModalVisible,\r\n        showModal,\r\n        hideModal\r\n    ] as [boolean, () => void, () => void]\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useCallback, useMemo, useState } from \"react\"\r\n\r\nexport const useTable = <T,>() => {\r\n    //SelectedItem\r\n    const [selectedItem, setSelectedItem] = useState<T | null>(null)\r\n    const changeSelectedItem = useCallback((value: T) => setSelectedItem(value), [])\r\n    const resetSelectedItem = useCallback(() => setSelectedItem(null), [])\r\n\r\n    //Row selection\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([])\r\n    const onSelectChange = useCallback((newSelectedRowKeys: React.Key[]) => {\r\n        setSelectedRowKeys(newSelectedRowKeys)\r\n    }, [])\r\n\r\n    const rowSelection = useMemo(() => ({\r\n        selectedRowKeys,\r\n        onChange: onSelectChange,\r\n    }), [onSelectChange, selectedRowKeys])\r\n\r\n    const onRowClick = useCallback((record: T) => ({ onClick: () => changeSelectedItem(record) }), [])\r\n\r\n    return {\r\n        selectedItem,\r\n        changeSelectedItem,\r\n        resetSelectedItem,\r\n        selectedRowKeys,\r\n        setSelectedRowKeys,\r\n        rowSelection,\r\n        onRowClick,\r\n    }\r\n}","import { User } from \"@models/user\"\r\nimport { useAppSelector } from \"@store/store\"\r\n\r\nexport const useUser = () => {\r\n    const user = useAppSelector((state) => ({\r\n        id: state.user.id,\r\n        name: state.user.name,\r\n        email: state.user.email,\r\n    } as User))\r\n\r\n    return user\r\n}","const parseBigValue = (value: number | string, bitCount: number, fixedDecimal = -1): string => {\r\n    if (!value) {\r\n        return '0'\r\n    }\r\n    if (bitCount === 0) {\r\n        return value.toString()\r\n    }\r\n    let result = ''\r\n    let stringValue: string =\r\n        fixedDecimal === -1 || typeof value === 'string' ? value.toString() : value.toFixed(fixedDecimal)\r\n    while (!!stringValue) {\r\n        const choosedLastChars: string = stringValue.slice(-bitCount)\r\n        result = ' ' + choosedLastChars + result\r\n        const length: number = stringValue.length\r\n        stringValue = length - bitCount > 0 ? stringValue.slice(0, length - bitCount) : ''\r\n    }\r\n    return result.trim()\r\n}\r\n\r\nexport default parseBigValue\r\n"],"names":["RubInput","props","prefix","style","width","step","formatter","value","String","replace","parser","Number","React","CatalogSelect","catalog","placeholder","allowClear","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","includes","filterSort","optionA","optionB","localeCompare","map","item","id","name","recursionObjectSearch","obj","keys","Array","isArray","tempKeys","i","length","key","entity","shift","onSearchFilter","dataIndex","record","string","toString","onDatePickerFilter","date","isSameOrBefore","isSameOrAfter","onSliderFilter","number","customFilter","initialSliderValues","filterDropdown","filterIcon","CalendarOutlined","onFilter","SlidersOutlined","SearchOutlined","StyledTable","styled","AntdTable","Table","columns","other","customColumns","useMemo","col","getTableCustomFilter","rowKey","bordered","DropdownDatePicker","format","onChange","setSelectedKeys","confirm","clearFilters","ranges","moment","add","DropdownSlider","min","max","symbol","useState","setValue","marks","left","transform","whiteSpace","label","parseBigValue","useCallback","padding","range","draggableTrack","tooltip","marginBottom","display","type","onClick","handleSearch","size","DropdownSearch","selectedKeys","e","target","onPressEnter","icon","handleReset","EditableCell","editing","inputType","title","index","restProps","margin","rules","required","message","inputNode","EditButtons","editable","edit","cancelEdit","editingKey","loading","save","onConfirm","SaveOutlined","CloseOutlined","disabled","EditOutlined","UserFilterSelect","Wrapper","PageToolbar","onOpenCreate","deleteLoading","deleteDisable","onDelete","userFilter","onChangeFilter","userSelect","Object","entries","wrap","FileAddOutlined","placement","okText","cancelText","DeleteOutlined","defaultValue","PageWrapper","SubjectDealType","StatusDealType","dealsApi","commonApi","endpoints","build","fetchDeals","query","url","onQueryStarted","_","dispatch","queryFulfilled","then","data","catch","error","status","userActions","providesTags","createDeal","mutation","newDeal","method","body","util","updateQueryData","draft","push","updateDeal","updated","deal","find","assign","deleteDeal","invalidatesTags","result","arg","useCreateDealMutation","useDeleteDealMutation","useFetchDealsQuery","useUpdateDealMutation","customersApi","useLazyFetchDealsQuery","fetchCustomers","createCustomer","newCustomer","updateCustomer","customer","deleteCustomer","useFetchCustomersQuery","useCreateCustomerMutation","useDeleteCustomerMutation","useUpdateCustomerMutation","useLazyFetchCustomersQuery","ChangeTypes","DealFieldNames","comments","auto_prolongation","include_into_count","address_into_count","company","subject","name_1c","price","customers","contract_date","end_date","TabsBar","activeKey","onEdit","onClose","isAttachments","openAttachments","dot","PaperClipOutlined","changeTypeFilters","text","create","update","align","render","sorter","a","b","when","diff","defaultSortOrder","filters","change_type","indexOf","what","field","color","HistoryView","dataSource","scroll","x","level","getHistoryColumns","pagination","subjectFilters","favor","contracts","outsource","statusFilters","sighed","terminated","on_considering","fixed","responsive","checked","sort","some","INN","KPP","form","catalogs","subjects","setFieldValue","undefined","statuses","toISOString","getValueProps","valuePropName","mode","wrapperCol","xs","offset","sm","useDealActions","user","createClose","selectedRowKeys","setSelectedRowKeys","resetSelectedItem","selectedItem","changeSelectedItem","offEdit","createInitialValues","onCreate","values","dateNow","isMoment","deleted","created_by","created_date","updated_by","updated_date","attachments","history_log","v4","who","unwrap","onGroupDelete","Promise","all","onUpdate","changedFields","obj1","obj2","forEach","equal","getChangedFields","AttachmentsModal","isModalVisible","hideModal","fileList","setFileList","resetFileList","modalLoading","setModalLoading","modalError","setmodalError","onOk","setTimeout","useEffect","open","confirmLoading","onCancel","multiple","beforeUpload","info","file","prev","filter","uid","className","InboxOutlined","CreateDealForm","getFields","onFinish","initialValues","Form","fields","buttonsLayout","onReset","resetFields","handleFinish","autoComplete","labelCol","span","JSON","stringify","htmlType","ViewEditForm","selected","setFieldsValue","StyledTabs","Tabs","ViewTabs","toggleActiveKey","tabsBar","tabsItems","tabBarExtraContent","right","items","ResizeTemplate","mainSection","viewSection","full","collapsed","orientation","windowResizeAware","minSize","useUser","useWindowSize","height","deals","isFetching","isLoading","deleteDealLoading","deleteDealError","updateDealLoading","updateDealError","createDealLoading","createDealError","useTable","onRowClick","rowSelection","getDealsColumns","y","showTotal","total","lineHeight","showSizeChanger","userId","setUserFilter","toggleFilter","filteredEntities","useUserFilter","setEdit","setActiveKey","onCloseTabs","useTabs","openDrawer","setOpenDrawer","useDrawer","createDrawer","createShow","useModal","attachmentsModal","attachmentsShow","attachmentsHide","updatedFields","getUpdatedFields","createdFields","getCreatedFields","onRow","CreateForm","setIsModalVisible","setSelectedItem","onSelectChange","newSelectedRowKeys","useAppSelector","state","email","bitCount","fixedDecimal","stringValue","toFixed","choosedLastChars","slice","trim"],"sourceRoot":""}